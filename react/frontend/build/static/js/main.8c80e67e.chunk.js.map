{"version":3,"sources":["Header.js","context/playContext.js","Player.js","documents/kandidat.pdf","views/about.js","Collapsible.js","images/nr_1.png","images/nr_2.png","images/nr_3.png","images/nr_4.png","images/nr_5.png","views/upload.js","images/output.gif","views/home.js","views/contact.js","App.js","index.js"],"names":["HeaderLink","page","link","title","charAt","toUpperCase","slice","to","className","Header","PlayContext","createContext","PlayProvider","children","useState","isPlaying","setIsPlaying","radio","setAudioRef","isLoading","setLoading","value","getIsPlaying","getIsLoading","useEffect","src","oncanplay","e","play","pause","Provider","usePlayContext","useContext","Player","handleKeyDown","keyCode","target","type","tagName","document","addEventListener","removeEventListener","textPlaying","columns","gap","style","width","color","textAlign","paddingTop","height","fontSize","lineHeight","weight","margin","icon","PauseIcon","PlayIcon","onClick","ref","c","About","marginTop","href","Thesis","id","Collapsible","props","state","open","togglePanel","bind","this","setState","viewBox","d","React","Component","Upload","formMessage","setMessage","file","setFile","formData","setFormData","success","setSuccess","push","useToast","disabled","setDisabled","hasFile","setHasFile","isSubmitted","setSubmitted","axios","post","then","response","data","description","status","isMobile","catch","justifyItems","onSubmit","event","preventDefault","FormData","append","align","minWidth","marginBottom","currentTarget","checked","display","flex","paddingLeft","htmlFor","fontStyle","fontWeight","name","cols","rows","onChange","fileToUpload","files","split","pop","accept","image1","alt","srcset","image2","image3","image4","image5","Home","squigglyLines","Contact","window","location","DocumentIcon","App","exact","path","component","ReactDOM","render","StrictMode","theme","studioTheme","scheme","getElementById"],"mappings":"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","file":"static/js/main.8c80e67e.chunk.js","sourcesContent":["import \"./Header.css\";\n\nimport { Grid } from \"@sanity/ui\";\nimport { Link } from \"react-router-dom\";\n\nconst HeaderLink = ({ page, link }) => {\n  const title = page.charAt(0).toUpperCase() + page.slice(1);\n  return (\n    <Link to={link ? link : `/${page}`} className=\"headerlink-title\">\n      {title}\n    </Link>\n  );\n};\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      {/*      <Grid\n        columns={[3]}\n        gap={[0]}\n        style={{\n          width: \"50%\",\n          maxWidth: \"420px\",\n          minWidth: \"310px\",\n          textAlign: \"center\",\n        }}\n      >*/}\n      <div className=\"nav-container\">\n        <HeaderLink page=\"hem\" link=\"/\"></HeaderLink>\n        {/*<HeaderLink page=\"uppladdning\"></HeaderLink>*/}\n        <HeaderLink page=\"uppladdning\"></HeaderLink>\n        <HeaderLink page=\"om\"></HeaderLink>\n        <HeaderLink page=\"kontakt\"></HeaderLink>\n        {/*<HeaderLink page=\"kontakt\"></HeaderLink>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useMemo,\n  useState,\n} from \"react\";\n\nconst PlayContext = createContext(false);\n\nexport function PlayProvider({ children }) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [radio, setAudioRef] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  //const radio = useMemo(() => new Audio(), []);\n\n  const value = {\n    setIsPlaying: setIsPlaying,\n    getIsPlaying: isPlaying,\n    setAudioRef: setAudioRef,\n    getIsLoading: isLoading,\n  };\n\n  useEffect(() => {\n    if (radio !== null) {\n      if (isPlaying) {\n        radio.src = \"https://stream.radiodiabetes.eu/\";\n\n        //radio.load();\n        radio.oncanplay = (e) => {\n          setLoading(false);\n        };\n\n        setLoading(true);\n        radio.play();\n      } else {\n        if (isLoading) {\n          setLoading(false);\n        } else radio.pause();\n        radio.src = \"\";\n      }\n    }\n  }, [isPlaying, radio]);\n\n  return <PlayContext.Provider value={value}>{children} </PlayContext.Provider>;\n}\n\nexport const usePlayContext = () => useContext(PlayContext);\n","import React, { useEffect } from \"react\";\nimport \"./Player.css\";\nimport { Button, Grid, Card, Inline, Text } from \"@sanity/ui\";\nimport { PauseIcon, PlayIcon, SpinnerIcon } from \"@sanity/icons\";\nimport { usePlayContext } from \"./context\";\nimport Loader from \"react-loader-spinner\";\n\nexport function Player() {\n  const {\n    getIsPlaying,\n    setIsPlaying,\n    setAudioRef,\n    getIsLoading,\n  } = usePlayContext();\n\n  useEffect(() => {\n    function handleKeyDown(e) {\n      if (\n        e.keyCode === 32 &&\n        e.target.type !== \"textarea\" &&\n        e.target.tagName !== \"INPUT\"\n      ) {\n        if (!getIsLoading) setIsPlaying(!getIsPlaying);\n      }\n    }\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Don't forget to clean up\n    return function cleanup() {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [getIsPlaying, getIsLoading, setIsPlaying]);\n\n  const textPlaying = !getIsPlaying ? \"Lyssna på\" : \"Stoppa\";\n\n  return (\n    <div className=\"playbar\">\n      <Grid\n        columns={[2]}\n        gap={[1]}\n        style={{\n          width: \"150px\",\n        }}\n      >\n        <Text\n          style={{\n            color: \"lightgrey\",\n            textAlign: \"left\",\n            paddingTop: \"0.85em\",\n            height: \"100%\",\n            fontSize: \"70%\",\n            lineHeight: \"100%\",\n          }}\n          weight=\"semibold\"\n        >\n          {getIsLoading ? (\n            <div className=\"loading\">Radion laddar </div>\n          ) : (\n            `${textPlaying} radion:`\n          )}\n        </Text>\n        <Button\n          /*icon={getIsPlaying ? PauseIcon : PlayIcon}*/\n          style={{\n            width: \"2em\",\n            margin: \"0 auto\",\n            height: \"2em\",\n          }}\n          icon={\n            getIsPlaying ? (\n              getIsLoading ? (\n                <Loader type=\"Oval\" color=\"white\" height={15} width={15} />\n              ) : (\n                PauseIcon\n              )\n            ) : (\n              PlayIcon\n            )\n          }\n          onClick={() => {\n            if (!getIsLoading) setIsPlaying(!getIsPlaying);\n          }}\n        ></Button>\n        <audio ref={(c) => setAudioRef(c)}></audio>\n      </Grid>{\" \"}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/kandidat.c51f248a.pdf\";","import \"./about.css\";\nimport React from \"react\";\nimport Thesis from \"../documents/kandidat.pdf\";\nimport { Link } from \"react-router-dom\";\n\nexport function About() {\n  return (\n    <div className=\"infotext\">\n      <h2>Om</h2>\n      <div className=\"breadText\">\n        <h3 style={{ marginTop: \"0\" }}>Vad är detta?</h3>\n        <p>\n          <em>Radio Diabetes</em> är en interaktiv ljud&shy;installation som\n          skapar musik av blod&shy;sockervärden. Installationen har jag,{\" \"}\n          {/*&mdash;*/}\n          Karl Johannes Jondell, byggt som examens&shy;projekt för min\n          kandidat&shy;utbildning inom elektro&shy;akustisk komposition på\n          Kungliga Musik&shy;högskolan.\n        </p>\n        <p>\n          {\" \"}\n          Idéen föddes av att jag som diabetiker känt ett behov av att\n          av&shy;dramatisera mitt förhållande till mina blod&shy;sockerkurvor:\n          att göra något kul och spännande av dem, att de inte <em>bara</em> är\n          ett mått på hur väl jag \"presterar\" som diabetiker, utan att de också\n          kan ge upphov till något fint och lustfyllt.\n        </p>\n        <p>\n          Jag vill erbjuda <b>alla</b> diabetiker denna chans, och även chansen\n          att dela med sig av sina värden utan att de bedöms, utan att det är en\n          prestation, utan något stigma, ett prestigelöst delande. Min\n          förhoppning är att denna installation på ett lekfullt sätt kan ge\n          upphov till en ytterligare gemenskap för oss diabetiker, som inte\n          behöver vara lika allvarlig och allvarsam som själva sjukdomen.\n        </p>\n        <h3>Hur fungerar det?</h3>\n        <p>\n          Musiken som spelas upp i radion genereras i realtid av ett program som\n          jag byggt: musiken du hör skapas alltså i samma stund som den spelas\n          upp. Programmet i sin tur skapar de olika melodier och tonföljder som\n          hörs utifrån de blodsockervärden som delas på{\" \"}\n          <Link to=\"/uppladdning\">Uppladdnings</Link>-sidan. När någon laddar\n          upp sina värden så skickas de direkt vidare till\n          musik&shy;skapar&shy;programmet, som spelar upp ett tack-meddelande\n          och sedan låter värdena styra någon musikalisk funktion i programmet.\n          Till exempel kan värdena få styra tonhöjd av en nyskapad synth.\n        </p>\n        <p>\n          {\" \"}\n          Om du hör en röst säga \"tack så mycket\" innebär det alltså att någon i\n          denna stund delat med sig av sina värden. Efter detta kanske du lägger\n          märke till att en ny ljudande figur ger sig till känna: denna skapas\n          alltså utifrån de värden som precis laddats upp!\n        </p>\n        <p>\n          {\" \"}\n          Om det är många som delar med sig av sina värden samtidigt, kan några\n          läggas på kö, för att spelas upp senare. Så om du laddar upp värden,\n          och hör ett tack-meddelande, men inte hör någon särskild förändring i\n          musiken, är det möjligt att dina värden har lagts på kö. Håll till\n          godo, de kommer att spelas upp inom kort!\n        </p>\n        <p>\n          En mer teknisk be&shy;skrivning av hela systemet finns att läsa i min\n          examens&shy;text <a href={Thesis}>här</a>.\n        </p>\n        <div id=\"gdpr\">\n          <h3>Dataanvändning och GDPR</h3>\n          <p>\n            Jag vill vara tydlig med att <b>ingen</b> datafil sparas på servern.\n            Varken jag eller någon annan har möjlighet att komma åt filerna som\n            laddas upp. När en fil laddas upp så anonym&shy;iseras innehållet\n            direkt, och endast värdena slussas vidare till musik&shy;programmet,\n            som endast temporärt sparar dessa i sitt arbets&shy;minne. Ingen har\n            alltså tillgång till de värden som laddas upp, och de kan inte\n            kopplas till någon individ. Ovan beskrivs hur behandlingen av\n            värdena sker, och en mer teknisk redogörelse finns att läsa i min\n            examens&shy;text <a href={Thesis}>här</a>.\n          </p>\n          <p>\n            Enligt data&shy;skyddsförordningen (\n            <a href=\"https://www.imy.se/lagar--regler/dataskyddsforordningen/kansliga-personuppgifter/\">\n              GDPR\n            </a>\n            ) klassas blod&shy;sockervärden som{\" \"}\n            <em>särskilt känsliga uppgifter</em>. Därför måste du som laddar upp\n            ge ditt samtycke till att värdena som du laddar upp används och\n            behandlas för detta ändamål. Känner du dig minsta osäker så\n            välkomnar jag alla frågor på{\" \"}\n            <a href=\"mailto:info@radiodiabetes.eu\">info@radiodiabetes.eu</a>,\n            ingen fråga för stor eller för liten.\n          </p>\n        </div>\n      </div>{\" \"}\n    </div>\n  );\n}\n","import \"./Collapsible.css\";\nimport React from \"react\";\n\nclass Collapsible extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n  togglePanel(e) {\n    this.setState({ open: !this.state.open });\n  }\n  render() {\n    return (\n      <div className=\"instruktioner\">\n        <div onClick={(e) => this.togglePanel(e)} className=\"collapsible\">\n          <div className=\"instructions-title\">{this.props.title}</div>\n          <div className=\"expand-btn\">\n            <svg className={this.state.open ? \"expand-arrow--expanded\" : null} viewBox=\"0 0 100 100\">\n                <path d=\"M5 15 L50 85 L95 15\" />\n            </svg>\n          </div>\n        </div>\n        {this.state.open ? (\n          <div className=\"content\">{this.props.children}</div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Collapsible;\n","export default __webpack_public_path__ + \"static/media/nr_1.cc494ec8.png\";","export default __webpack_public_path__ + \"static/media/nr_2.96970491.png\";","export default __webpack_public_path__ + \"static/media/nr_3.9ff247e8.png\";","export default __webpack_public_path__ + \"static/media/nr_4.2781d3c5.png\";","export default __webpack_public_path__ + \"static/media/nr_5.fa377c1f.png\";","import { isMobile } from \"react-device-detect\";\nimport {\n  TextArea,\n  Button,\n  Box,\n  Checkbox,\n  Flex,\n  Text,\n  useToast,\n} from \"@sanity/ui\";\nimport \"./upload.css\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\n\nimport { usePlayContext } from \"../context\";\nimport Collapsible from \"../Collapsible\";\n\nimport image1 from \"../images/nr_1.png\";\nimport image2 from \"../images/nr_2.png\";\nimport image3 from \"../images/nr_3.png\";\nimport image4 from \"../images/nr_4.png\";\nimport image5 from \"../images/nr_5.png\";\n\nexport function Upload() {\n  const [formMessage, setMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [formData, setFormData] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const { setIsPlaying, getIsPlaying, setAudioRef } = usePlayContext();\n  const { push } = useToast();\n  const [disabled, setDisabled] = useState(true);\n  const [hasFile, setHasFile] = useState(false);\n  const [isSubmitted, setSubmitted] = useState(false);\n\n  const handleTextChange = (event) => {\n    setMessage(event.currentTarget.value);\n  };\n\n  const handleDisabled = (event) => {\n    setDisabled(!event.currentTarget.checked);\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"message\", formMessage);\n\n    setFormData(formData);\n  };\n\n  const onFileChange = (event) => {\n    const fileToUpload = event.target.files[0];\n    if (fileToUpload) {\n      if (\n        fileToUpload.name.split(\".\").pop() === \"xls\" ||\n        fileToUpload.name.split(\".\").pop() === \"xlsx\"\n      ) {\n        setFile(fileToUpload);\n        setHasFile(true);\n      } else {\n        setHasFile(false);\n      }\n    } else {\n      setHasFile(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!formData) return;\n    if (!isSubmitted) {\n      setSubmitted(true);\n      axios\n        .post(\"/api/uppladdning\", formData)\n        .then((response) => {\n          if (response.data[\"uploadSuccess\"]) {\n            setSuccess(true);\n            push({\n              title: \"Tack!\",\n              description: \"Ditt bidrag har mottagits!\",\n              status: \"success\",\n            });\n            if (!isMobile) {\n              if (!getIsPlaying) {\n                setIsPlaying(true);\n              }\n            }\n          } else {\n            push({\n              title: \"Hoppsan!\",\n              description: \"Något har blivit fel. Vänligen försök igen!\",\n              status: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          setSubmitted(false);\n          push({\n            title: \"Hoppsan!\",\n            description: \"Något har blivit fel. Vänligen försök igen!\",\n            status: \"error\",\n          });\n        });\n    }\n    setFormData(null);\n    return false;\n  }, [\n    formData,\n    getIsPlaying,\n    push,\n    setIsPlaying,\n    setAudioRef,\n    isSubmitted,\n    setSubmitted,\n  ]);\n\n  if (success) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      {/*getIsPlaying ? \"Is playing\" : \"Not playing\"*/}\n      {/*<Button text=\"Play\" onClick={() => setIsPlaying(!getIsPlaying)} />*/}\n      <div className=\"infotext\">\n        <h2>Dela värden</h2>\n      </div>\n      <div className=\"form\">\n        <form\n          style={{ justifyItems: \"center\" }}\n          onSubmit={onFormSubmit}\n          id=\"uploadform\"\n        >\n          {/*        <div>\n          <input\n            type=\"checkbox\"\n            name=\"toc\"\n            id=\"toc\"\n            style={{ marginRight: \"0.5em\", marginLeft: \"1em\" }}\n            onClick={handleDisabled}\n          />\n          <label style={{ textAlign: \"center\" }}>\n            Genom att klicka i denna knapp godkänner jag användandet av den\n            uppladdade datan i detta projekt.{\" \"}\n          </label>\n        </div>*/}\n          <Flex\n            align=\"center\"\n            style={{\n              paddingTop: \"0\",\n              width: \"70%\",\n              minWidth: \"300px\",\n              margin: \"0 auto\",\n              marginBottom: \"15px\",\n            }}\n          >\n            <Checkbox\n              id=\"checkbox\"\n              onClick={handleDisabled}\n              style={{ display: \"block\", paddingTop: \"0\" }}\n            />\n            <Box style={{ paddingTop: \"0\" }} flex={1} paddingLeft={3}>\n              <Text>\n                <label htmlFor=\"checkbox\" style={{ fontStyle: \"italic\" }}>\n                  Genom att kryssa i denna ruta godkänner jag användandet av den\n                  uppladdade datan i detta projekt. All data anonymiseras så\n                  fort den är mottagen och inga filer sparas på servern. Du kan\n                  läsa mer om dataanvändningen{\" \"}\n                  <HashLink to=\"/om#gdpr\">här</HashLink>.\n                </label>\n              </Text>\n            </Box>\n          </Flex>\n          <Flex\n            align=\"left\"\n            style={{ fontWeight: \"bold\", width: \"100%\", paddingTop: \"10px\" }}\n          >\n            <Text>\n              <label\n                htmlFor=\"meddelande\"\n                style={\n                  disabled\n                    ? { textAlign: \"left\", color: \"gray\" }\n                    : { textAlign: \"left\" }\n                }\n              >\n                Lämna ett meddelande (frivilligt):\n              </label>\n            </Text>\n          </Flex>\n          <Flex align=\"center\">\n            <textarea\n              disabled={disabled}\n              name=\"text\"\n              id=\"\"\n              cols=\"30\"\n              rows=\"4\"\n              value={formMessage}\n              onChange={handleTextChange}\n            ></textarea>\n          </Flex>\n          <input\n            type=\"file\"\n            onChange={onFileChange}\n            /*onClick={() => }*/\n            accept=\".xls, .xlsx, .csv\"\n            id=\"upload\"\n            disabled={disabled}\n          />\n          <Flex align=\"center\">\n            <button disabled={hasFile ? disabled : \"disabled\"} type=\"submit\">\n              Dela\n            </button>\n          </Flex>\n        </form>\n      </div>\n      <Collapsible title=\"Instruktioner (klicka här!)\">\n        <div className=\"instructions\">\n          {\" \"}\n          <p>\n            Följ instruktionerna nedan för att delta i radioströmmen.\n            {/*            <br />\n            <div style={{ fontSize: \"80%\" }}>\n              Notera att det endast går att ladda upp värden via en dator i\n              nuläget.\n            </div>*/}\n          </p>\n          <p>\n            1. Surfa in på{\" \"}\n            <a href=\"https://diasend.com/\">https://diasend.com/</a> och logga\n            in:\n            <img src={image1} alt=\"\" srcset=\"\" />\n          </p>\n          <p>\n            2. Klicka på fältet <em>\"Dela data\"</em>:\n            <img src={image2} alt=\"\" srcset=\"\" />\n          </p>\n          <p>\n            3. Klicka sedan på \"<em>Exportera data</em>\":\n            <img src={image3} alt=\"\" srcset=\"\" />\n          </p>\n          <p>\n            4. Skriv in koden i fältet \"<em>Ange koden nedan</em>\", och klicka\n            sedan på \"<em>Exportera till Excel</em>\". En \".xls\"-fil med dina\n            värden kommer nu att sparas till din dator. Du hittar filen i din\n            Nedladdat-mapp.\n            <img src={image4} alt=\"\" srcset=\"\" />\n          </p>\n          <p>\n            5. Till sist laddar du upp \".xls\"-filen genom att först klicka i\n            rutan där du godkänner att filen används, och sedan klickar på\n            knappen \"<em>Välj fil</em>\". Du får gärna lämna ett meddelande om du\n            vill, detta kommer inte att publiceras och är anonymt.\n            <img src={image5} alt=\"\" srcset=\"\" />\n          </p>\n        </div>\n      </Collapsible>\n      {/*      <Collapsible trigger=\"Instruktioner\">\n        <p>\n          Här står det lite instruktioner\n        </p>\n      </Collapsible>*/}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/output.2909dd92.gif\";","import \"./about.css\";\nimport React from \"react\";\nimport squigglyLines from \"../images/output.gif\";\n\nexport function Home() {\n  return (\n    <div className=\"infotext\">\n      <h2>\n        Välkommen till <em>Radio Diabetes</em>!\n      </h2>\n      <figure className=\"figure\">\n        <img src={squigglyLines} alt=\"En visualisering av blodsockervärden.\" />\n        <figcaption>Visualisering av blodsockervärden.{\"\\n\"}</figcaption>\n        <figcaption>\n          OBS! Inte kopplad till musiken eller uppladdade värden.\n        </figcaption>\n      </figure>\n    </div>\n  );\n}\n","import \"./contact.css\";\nimport React from \"react\";\nimport { Button, Grid, Card, Inline, Text } from \"@sanity/ui\";\nimport Thesis from \"../documents/kandidat.pdf\";\nimport { DocumentIcon } from \"@sanity/icons\";\nimport { FaGithub, FaSoundcloud } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\n\nexport function Contact() {\n  return (\n    <div>\n      <div className=\"infotext\">\n        <h2>Kontaktuppgifter</h2>\n      </div>\n      <div className=\"contactinfo\">\n        <Grid columns={[2]} gap={[3]}>\n          <Text style={{ textAlign: \"left\", fontWeight: \"bold\" }}>\n            Mejladress:\n          </Text>\n\n          <Text style={{ textAlign: \"left\" }}>\n            <a href=\"mailto:info@radiodiabetes.eu\">info@radiodiabetes.eu</a>\n          </Text>\n\n          <Text\n            style={{\n              textAlign: \"left\",\n              paddingTop: \"0.5em\",\n              fontWeight: \"bold\",\n            }}\n          >\n            Källkod:\n          </Text>\n\n          <Text style={{ textAlign: \"left\" }}>\n            <Button /*icon={getIsPlaying ? PauseIcon : PlayIcon}*/\n              style={{\n                width: \"2em\",\n                height: \"2em\",\n              }}\n              icon={\n                <IconContext.Provider\n                  value={{\n                    style: { fontSize: \"20px\" },\n                  }}\n                >\n                  <FaGithub />\n                </IconContext.Provider>\n              }\n              onClick={() => {\n                window.location.href = \"http://repo.radiodiabetes.eu\";\n              }}\n            ></Button>\n          </Text>\n\n          <Text\n            style={{\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n              paddingTop: \"0.5em\",\n            }}\n          >\n            Examenstext:\n          </Text>\n\n          <Button /*icon={getIsPlaying ? PauseIcon : PlayIcon}*/\n            style={{\n              width: \"2em\",\n              height: \"2em\",\n            }}\n            icon={DocumentIcon}\n            onClick={() => {\n              window.location.href = Thesis;\n            }}\n          ></Button>\n\n          <Text style={{ textAlign: \"left\", fontWeight: \"bold\" }}>\n            Ansvarig utgivare:\n          </Text>\n\n          <Text style={{ textAlign: \"left\" }}>Karl Johannes Jondell</Text>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","// import axios from \"axios\";\nimport React from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport { Player } from \"./Player\";\nimport { About, Upload, Home, Contact } from \"./views\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Player />\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/om\" component={About}></Route>\n        <Route exact path=\"/kontakt\" component={Contact}></Route>\n        {/* <Route exact path=\"/uppladdning\" component={Uppladdning}></Route> */}\n        <Route exact path=\"/uppladdning\" component={Upload}></Route>\n        {/*<Route exact path=\"/kontakt\" component={Contact}></Route>*/}\n        {/*<Route exact path=\"/success\" component={Success}></Route>*/}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ThemeProvider, studioTheme, ToastProvider } from \"@sanity/ui\";\n\nimport { PlayProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={studioTheme} scheme=\"light\">\n      <ToastProvider>\n        <PlayProvider>\n          <App />\n        </PlayProvider>\n      </ToastProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}