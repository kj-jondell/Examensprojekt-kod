{"version":3,"sources":["Header.js","context/playContext.js","Player.js","views/about.js","Collapsible.js","images/nr_1.png","images/nr_2.png","images/nr_3.png","images/nr_4.png","images/nr_5.png","views/upload.js","App.js","index.js"],"names":["HeaderLink","page","title","charAt","toUpperCase","slice","to","className","Header","PlayContext","createContext","PlayProvider","children","useState","isPlaying","setIsPlaying","radio","setAudioRef","value","getIsPlaying","useEffect","src","load","play","pause","Provider","usePlayContext","useContext","Player","textPlaying","style","color","alignItems","display","height","paddingRight","fontSize","weight","icon","PauseIcon","PlayIcon","onClick","ref","c","About","target","href","Collapsible","props","state","open","togglePanel","bind","e","this","setState","React","Component","Upload","formMessage","setMessage","file","setFile","formData","setFormData","success","setSuccess","push","useToast","disabled","setDisabled","hasFile","setHasFile","axios","post","then","response","data","description","status","isMobile","catch","justifyItems","onSubmit","event","preventDefault","FormData","append","id","align","currentTarget","checked","flex","paddingLeft","htmlFor","textAlign","name","cols","rows","onChange","type","fileToUpload","files","split","pop","accept","image1","alt","srcset","image2","image3","image4","image5","App","path","component","exact","ReactDOM","render","StrictMode","theme","studioTheme","scheme","document","getElementById"],"mappings":"+TAIMA,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAQD,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,GACxD,OACE,cAAC,IAAD,CAAMC,GAAE,WAAML,GAAQM,UAAU,mBAAhC,SACGL,KAkBQM,EAbA,WACb,OACE,qBAAKD,UAAU,SAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAYN,KAAK,OAEjB,cAAC,EAAD,CAAYA,KAAK,sB,mDCVnBQ,EAAcC,yBAAc,GAE3B,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACPC,oBAAS,GADF,mBAClCC,EADkC,KACvBC,EADuB,OAEZF,mBAAS,MAFG,mBAElCG,EAFkC,KAE3BC,EAF2B,KAKnCC,EAAQ,CACZH,aAAcA,EACdI,aAAcL,EACdG,YAAaA,GAiBf,OAdAG,qBAAU,WACM,OAAVJ,IACEF,GACFE,EAAMK,IAAM,mCACZL,EAAMM,OACNN,EAAMO,QAGNP,EAAMQ,WAIT,CAACV,EAAWE,IAER,eAACP,EAAYgB,SAAb,CAAsBP,MAAOA,EAA7B,UAAqCN,EAArC,OAGF,IAAMc,EAAiB,kBAAMC,qBAAWlB,ICjCxC,SAASmB,IAAU,IAAD,EAC6BF,IAA5CP,EADe,EACfA,aAAcJ,EADC,EACDA,aAAcE,EADb,EACaA,YAE9BY,EAAeV,EAA+B,QAAhB,cAEpC,OACE,sBAAKZ,UAAU,UAAf,UAGE,eAAC,IAAD,CACEuB,MAAO,CACLC,MAAO,YACPC,WAAY,SACZC,QAAS,OACTC,OAAQ,OACRC,aAAc,OACdC,SAAU,OAEZC,OAAO,WATT,sCAWsBR,EAXtB,cAeA,cAAC,SAAD,CACES,KAAMnB,EAAeoB,IAAYC,IACjCC,QAAS,kBAAM1B,GAAcI,MAE/B,uBAAOuB,IAAK,SAACC,GAAD,OAAO1B,EAAY0B,S,OC/B9B,SAASC,IACd,OACE,sBAAKrC,UAAU,WAAf,UACE,4DAC0B,gDAD1B,OAGA,8BACE,gDADF,uDAC2E,IACzE,6DAFF,UAE0C,4DAF1C,OAKA,8BACE,gDADF,2QAIiE,IAC/D,mBAAGsC,OAAO,SAASC,KAAK,+BAAxB,oBALF,OAUA,6CACc,mBAAGA,KAAK,+BAAR,oBADd,U,8GCISC,G,yDAxBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAM,GAER,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,+CAOnB,SAAYC,GACVC,KAAKC,SAAS,CAAEL,MAAOI,KAAKL,MAAMC,S,oBAEpC,WAAU,IAAD,OACP,OACE,sBAAK3C,UAAU,gBAAf,UACE,qBAAKkC,QAAS,SAACY,GAAD,OAAO,EAAKF,YAAYE,IAAI9C,UAAU,cAApD,SACG+C,KAAKN,MAAM9C,QAEboD,KAAKL,MAAMC,KACV,qBAAK3C,UAAU,UAAf,SAA0B+C,KAAKN,MAAMpC,WACnC,Y,GAnBc4C,IAAMC,YCHjB,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCwBlC,SAASC,IAAU,IAAD,EACW7C,mBAAS,IADpB,mBAChB8C,EADgB,KACHC,EADG,OAEC/C,mBAAS,MAFV,mBAEhBgD,EAFgB,KAEVC,EAFU,OAGSjD,mBAAS,MAHlB,mBAGhBkD,EAHgB,KAGNC,EAHM,OAIOnD,oBAAS,GAJhB,mBAIhBoD,EAJgB,KAIPC,EAJO,OAK6BxC,IAA5CX,EALe,EAKfA,aAAcI,EALC,EAKDA,aAAcF,EALb,EAKaA,YAC5BkD,EAASC,qBAATD,KANe,EAOStD,oBAAS,GAPlB,mBAOhBwD,EAPgB,KAONC,EAPM,OAQOzD,oBAAS,GARhB,mBAQhB0D,EARgB,KAQPC,EARO,KAgFvB,OAnCApD,qBAAU,WACR,GAAK2C,EA+BL,OA9BAU,IACGC,KAAK,mBAAoBX,GACzBY,MAAK,SAACC,GACDA,EAASC,KAAT,eACFX,GAAW,GACXC,EAAK,CACHjE,MAAO,QACP4E,YAAa,6BACbC,OAAQ,YAELC,YACE7D,GACHJ,GAAa,IAIjBoD,EAAK,CACHjE,MAAO,WACP4E,YAAa,0DACbC,OAAQ,aAIbE,OAAM,WACLd,EAAK,CACHjE,MAAO,WACP4E,YAAa,0DACbC,OAAQ,cAGP,IACN,CAAChB,EAAU5C,EAAcgD,EAAMpD,EAAcE,IAE5CgD,IAAYe,WACP,cAAC,IAAD,CAAU1E,GAAG,MAIpB,gCAGE,qBAAKC,UAAU,OAAf,SACE,uBACEuB,MAAO,CAAEoD,aAAc,UACvBC,SAzEa,SAACC,GACpBA,EAAMC,iBAEN,IAAMtB,EAAW,IAAIuB,SACrBvB,EAASwB,OAAO,OAAQ1B,GACxBE,EAASwB,OAAO,UAAW5B,GAE3BK,EAAYD,IAmENyB,GAAG,aAHL,UAkBE,eAAC,IAAD,CAAMC,MAAM,SAAZ,UACE,cAAC,IAAD,CACED,GAAG,WACH/C,QAhGW,SAAC2C,GACtBd,GAAac,EAAMM,cAAcC,UAgGvB7D,MAAO,CAAEG,QAAS,WAEpB,cAAC,IAAD,CAAK2D,KAAM,EAAGC,YAAa,EAA3B,SACE,cAAC,IAAD,UACE,uBAAOC,QAAQ,WAAf,4HAON,cAAC,IAAD,CAAML,MAAM,OAAZ,SACE,cAAC,IAAD,UACE,uBACEK,QAAQ,aACRhE,MACEuC,EACI,CAAE0B,UAAW,OAAQhE,MAAO,QAC5B,CAAEgE,UAAW,QALrB,uDAYJ,cAAC,IAAD,CAAMN,MAAM,SAAZ,SACE,0BACEpB,SAAUA,EACV2B,KAAK,OACLR,GAAG,GACHS,KAAK,KACLC,KAAK,IACLhF,MAAOyC,EACPwC,SAtIa,SAACf,GACxBxB,EAAWwB,EAAMM,cAAcxE,YAwIzB,uBACEkF,KAAK,OACLD,SAzHW,SAACf,GACpB,IAAMiB,EAAejB,EAAMvC,OAAOyD,MAAM,GACpCD,IAEuC,QAAvCA,EAAaL,KAAKO,MAAM,KAAKC,OACU,SAAvCH,EAAaL,KAAKO,MAAM,KAAKC,QAE7B1C,EAAQuC,GACR7B,GAAW,IAKbA,GAAW,IA8GLiC,OAAO,oBACPjB,GAAG,SACHnB,SAAUA,IAEZ,cAAC,IAAD,CAAMoB,MAAM,SAAZ,SACE,wBAAQpB,SAAUE,EAAUF,EAAW,WAAY+B,KAAK,SAAxD,yBAMN,cAAC,EAAD,CAAalG,MAAM,iCAAnB,SACE,gCACG,IACD,mGAEE,uBACA,qBAAK4B,MAAO,CAAEM,SAAU,OAAxB,gGAKF,kDACiB,IACf,mBAAGU,KAAK,uBAAR,kCAFF,iBAIE,qBAAKzB,IAAKqF,EAAQC,IAAI,GAAGC,OAAO,QAElC,2DACsB,6CADtB,IAEE,qBAAKvF,IAAKwF,EAAQF,IAAI,GAAGC,OAAO,QAElC,wDACsB,gDADtB,KAEE,qBAAKvF,IAAKyF,EAAQH,IAAI,GAAGC,OAAO,QAElC,iIAGE,qBAAKvF,IAAK0F,EAAQJ,IAAI,GAAGC,OAAO,QAElC,wLAGW,6CAHX,KAIE,qBAAKvF,IAAK2F,EAAQL,IAAI,GAAGC,OAAO,gBCjJ7BK,MAlBf,WACE,OACE,qBAAK1G,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAO2G,KAAK,SAASC,UAAWvF,IAChC,cAAC,IAAD,CAAOwF,OAAK,EAACF,KAAK,IAAIC,UAAWvF,IACjC,cAAC,IAAD,CAAOwF,OAAK,EAACF,KAAK,IAAIC,UAAWvE,IACjC,cAAC,IAAD,CAAOwE,OAAK,EAACF,KAAK,MAAMC,UAAWvE,IAEnC,cAAC,IAAD,CAAOwE,OAAK,EAACF,KAAK,eAAeC,UAAWzD,U,iBC1DpD2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,MAAOC,IAAaC,OAAO,QAA1C,SACE,cAAC,gBAAD,UACE,cAAC/G,EAAD,UACE,cAAC,EAAD,YAKRgH,SAASC,eAAe,W","file":"static/js/main.af7e4e2b.chunk.js","sourcesContent":["import \"./Header.css\";\n\nimport { Link } from \"react-router-dom\";\n\nconst HeaderLink = ({ page }) => {\n  const title = page.charAt(0).toUpperCase() + page.slice(1);\n  return (\n    <Link to={`/${page}`} className=\"headerlink-title\">\n      {title}\n    </Link>\n  );\n};\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"nav-container\">\n        <HeaderLink page=\"om\"></HeaderLink>\n        {/*<HeaderLink page=\"uppladdning\"></HeaderLink>*/}\n        <HeaderLink page=\"uppladdning\"></HeaderLink>\n        {/*<HeaderLink page=\"kontakt\"></HeaderLink>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useMemo,\n  useState,\n} from \"react\";\n\nconst PlayContext = createContext(false);\n\nexport function PlayProvider({ children }) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [radio, setAudioRef] = useState(null);\n  //const radio = useMemo(() => new Audio(), []);\n\n  const value = {\n    setIsPlaying: setIsPlaying,\n    getIsPlaying: isPlaying,\n    setAudioRef: setAudioRef,\n  };\n\n  useEffect(() => {\n    if (radio !== null) {\n      if (isPlaying) {\n        radio.src = \"https://stream.radiodiabetes.eu/\";\n        radio.load();\n        radio.play(); // TODO sätta volym till 1 istället? eller synca på annat\n        // sätt...\n      } else {\n        radio.pause(); // TODO sätta volym till 0 istället? eller synca på annat\n        // sätt...\n      }\n    }\n  }, [isPlaying, radio]);\n\n  return <PlayContext.Provider value={value}>{children} </PlayContext.Provider>;\n}\n\nexport const usePlayContext = () => useContext(PlayContext);\n","import React from \"react\";\nimport \"./Player.css\";\nimport { Button, Card, Inline, Text } from \"@sanity/ui\";\nimport { PauseIcon, PlayIcon } from \"@sanity/icons\";\nimport { usePlayContext } from \"./context\";\n\nexport function Player() {\n  const { getIsPlaying, setIsPlaying, setAudioRef } = usePlayContext();\n\n  const textPlaying = !getIsPlaying ? \"lyssna till\" : \"pausa\";\n\n  return (\n    <div className=\"playbar\">\n      {/*<Inline space={2}>*/}\n      {/*<Card padding={2} tone=\"critical\" style={style} />*/}\n      <Text\n        style={{\n          color: \"lightgrey\",\n          alignItems: \"center\",\n          display: \"flex\",\n          height: \"100%\",\n          paddingRight: \"10px\",\n          fontSize: \"80%\",\n        }}\n        weight=\"semibold\"\n      >\n        Klicka här för att {textPlaying} radion:\n      </Text>\n      {/*</Inline>*/}\n\n      <Button\n        icon={getIsPlaying ? PauseIcon : PlayIcon}\n        onClick={() => setIsPlaying(!getIsPlaying)}\n      />\n      <audio ref={(c) => setAudioRef(c)}></audio>\n    </div>\n  );\n}\n","import \"./about.css\";\nimport React from \"react\";\n\nexport function About() {\n  return (\n    <div className=\"infotext\">\n      <p>\n        Hej, och välkommen till <em>Radio Diabetes</em>!\n      </p>\n      <p>\n        <em>Radio Diabetes</em> är mitt examensprojekt inom kandidatutbildningen{\" \"}\n        <em>Elektroakustisk komposition</em> på <em>Kungliga Musikhögskolan</em>\n        .\n      </p>\n      <p>\n        <em>Radio Diabetes</em> är Karl Johannes Jondells examensprojekt i\n        kandidatutbildningen elektroakustisk komposition på Kungliga\n        Musikhögskolan. Vill du läsa den examenstext tillhörande projektet finns\n        den att ladda ned här. All kod för projektet finns tillgänglig{\" \"}\n        <a target=\"_blank\" href=\"http://repo.radiodiabetes.eu\">\n          här\n        </a>\n        !\n      </p>\n      <p>\n        Skicka mejl <a href=\"mailto:info@radiodiabetes.eu\">här</a>.\n      </p>\n    </div>\n  );\n}\n","import \"./Collapsible.css\";\nimport React from \"react\";\n\nclass Collapsible extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n  togglePanel(e) {\n    this.setState({ open: !this.state.open });\n  }\n  render() {\n    return (\n      <div className=\"instruktioner\">\n        <div onClick={(e) => this.togglePanel(e)} className=\"collapsible\">\n          {this.props.title}\n        </div>\n        {this.state.open ? (\n          <div className=\"content\">{this.props.children}</div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Collapsible;\n","export default __webpack_public_path__ + \"static/media/nr_1.cc494ec8.png\";","export default __webpack_public_path__ + \"static/media/nr_2.96970491.png\";","export default __webpack_public_path__ + \"static/media/nr_3.9ff247e8.png\";","export default __webpack_public_path__ + \"static/media/nr_4.2781d3c5.png\";","export default __webpack_public_path__ + \"static/media/nr_5.88839ca0.png\";","import { isMobile } from \"react-device-detect\";\nimport {\n  TextArea,\n  Button,\n  Box,\n  Checkbox,\n  Flex,\n  Text,\n  useToast,\n} from \"@sanity/ui\";\nimport \"./upload.css\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { usePlayContext } from \"../context\";\nimport Collapsible from \"../Collapsible\";\n\nimport image1 from \"../images/nr_1.png\";\nimport image2 from \"../images/nr_2.png\";\nimport image3 from \"../images/nr_3.png\";\nimport image4 from \"../images/nr_4.png\";\nimport image5 from \"../images/nr_5.png\";\n\nexport function Upload() {\n  const [formMessage, setMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [formData, setFormData] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const { setIsPlaying, getIsPlaying, setAudioRef } = usePlayContext();\n  const { push } = useToast();\n  const [disabled, setDisabled] = useState(true);\n  const [hasFile, setHasFile] = useState(false);\n\n  const handleTextChange = (event) => {\n    setMessage(event.currentTarget.value);\n  };\n\n  const handleDisabled = (event) => {\n    setDisabled(!event.currentTarget.checked);\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"message\", formMessage);\n\n    setFormData(formData);\n  };\n\n  const onFileChange = (event) => {\n    const fileToUpload = event.target.files[0];\n    if (fileToUpload) {\n      if (\n        fileToUpload.name.split(\".\").pop() === \"xls\" ||\n        fileToUpload.name.split(\".\").pop() === \"xlsx\"\n      ) {\n        setFile(fileToUpload);\n        setHasFile(true);\n      } else {\n        setHasFile(false);\n      }\n    } else {\n      setHasFile(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!formData) return;\n    axios\n      .post(\"/api/uppladdning\", formData)\n      .then((response) => {\n        if (response.data[\"uploadSuccess\"]) {\n          setSuccess(true);\n          push({\n            title: \"Tack!\",\n            description: \"Ditt bidrag har mottagits!\",\n            status: \"success\",\n          });\n          if (!isMobile) {\n            if (!getIsPlaying) {\n              setIsPlaying(true);\n            }\n          }\n        } else {\n          push({\n            title: \"Hoppsan!\",\n            description: \"Något har blivit fel. Vänligen försök igen!\",\n            status: \"error\",\n          });\n        }\n      })\n      .catch(() => {\n        push({\n          title: \"Hoppsan!\",\n          description: \"Något har blivit fel. Vänligen försök igen!\",\n          status: \"error\",\n        });\n      });\n    return false;\n  }, [formData, getIsPlaying, push, setIsPlaying, setAudioRef]);\n\n  if (success && !isMobile) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      {/*getIsPlaying ? \"Is playing\" : \"Not playing\"*/}\n      {/*<Button text=\"Play\" onClick={() => setIsPlaying(!getIsPlaying)} />*/}\n      <div className=\"form\">\n        <form\n          style={{ justifyItems: \"center\" }}\n          onSubmit={onFormSubmit}\n          id=\"uploadform\"\n        >\n          {/*        <div>\n          <input\n            type=\"checkbox\"\n            name=\"toc\"\n            id=\"toc\"\n            style={{ marginRight: \"0.5em\", marginLeft: \"1em\" }}\n            onClick={handleDisabled}\n          />\n          <label style={{ textAlign: \"center\" }}>\n            Genom att klicka i denna knapp godkänner jag användandet av den\n            uppladdade datan i detta projekt.{\" \"}\n          </label>\n        </div>*/}\n          <Flex align=\"center\">\n            <Checkbox\n              id=\"checkbox\"\n              onClick={handleDisabled}\n              style={{ display: \"block\" }}\n            />\n            <Box flex={1} paddingLeft={3}>\n              <Text>\n                <label htmlFor=\"checkbox\">\n                  Genom att klicka i denna knapp godkänner jag användandet av\n                  den uppladdade datan i detta projekt.\n                </label>\n              </Text>\n            </Box>\n          </Flex>\n          <Flex align=\"left\">\n            <Text>\n              <label\n                htmlFor=\"meddelande\"\n                style={\n                  disabled\n                    ? { textAlign: \"left\", color: \"gray\" }\n                    : { textAlign: \"left\" }\n                }\n              >\n                Lämna ett meddelande (frivilligt):\n              </label>\n            </Text>\n          </Flex>\n          <Flex align=\"center\">\n            <textarea\n              disabled={disabled}\n              name=\"text\"\n              id=\"\"\n              cols=\"30\"\n              rows=\"4\"\n              value={formMessage}\n              onChange={handleTextChange}\n            ></textarea>\n          </Flex>\n          <input\n            type=\"file\"\n            onChange={onFileChange}\n            /*onClick={() => }*/\n            accept=\".xls, .xlsx, .csv\"\n            id=\"upload\"\n            disabled={disabled}\n          />\n          <Flex align=\"center\">\n            <button disabled={hasFile ? disabled : \"disabled\"} type=\"submit\">\n              Dela\n            </button>\n          </Flex>\n        </form>\n      </div>\n      <Collapsible title=\"Instruktioner (klicka här!)\">\n        <div>\n          {\" \"}\n          <p>\n            Följ instruktionerna nedan för att delta i radioströmmen.\n            <br />\n            <div style={{ fontSize: \"80%\" }}>\n              Notera att det endast går att ladda upp värden via en dator i\n              nuläget.\n            </div>\n          </p>\n          <p>\n            1. Surfa in på{\" \"}\n            <a href=\"https://diasend.com/\">https://diasend.com/</a> och logga\n            in:\n            <img src={image1} alt=\"\" srcset=\"\" />\n          </p>\n          <p>\n            2. Klicka på fältet <em>\"Dela data\"</em>:\n            <img src={image2} alt=\"\" srcset=\"\" />\n          </p>\n          <p>\n            3. Klicka sedan på \"<em>Exportera data</em>\":\n            <img src={image3} alt=\"\" srcset=\"\" />\n          </p>\n          <p>\n            4. Skriv in koden i fältet \"Ange koden nedan\", och klicka sedan på\n            \"Exportera till Excel\":\n            <img src={image4} alt=\"\" srcset=\"\" />\n          </p>\n          <p>\n            5. Till sist laddar du upp \".xls\" filen genom att först klicka i\n            rutan där du godkänner att filen används, och sedan klicka på\n            knappen \"<em>Välj fil</em>\":\n            <img src={image5} alt=\"\" srcset=\"\" />\n          </p>\n        </div>\n      </Collapsible>\n      {/*      <Collapsible trigger=\"Instruktioner\">\n        <p>\n          Här står det lite instruktioner\n        </p>\n      </Collapsible>*/}\n    </div>\n  );\n}\n","// import axios from \"axios\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport { Player } from \"./Player\";\nimport { About, Upload } from \"./views\";\n\n// let radio = new Audio(\"https://stream.radiodiabetes.eu/\");\n\n// function Hem(props) { return (<div><h2>Hem</h2>\n//    </div>); }\n\n/*\n * Gör om till en egen klass...\n */\n// class Uppladdning extends React.Component {\n//   onFileChange = (event) => {\n//     this.file = event.target.files[0];\n//     this.onUserSubmit(); // TODO ta bort ??? auto-submit...\n\n//     console.log(event.target.files[0]);\n//   };\n\n//   onUserSubmit = (event) => {\n//     if (event != null) event.preventDefault();\n//     // TODO lägg till begränsa storlek på fil! eller backend?\n//     const formData = new FormData();\n//     formData.append(\"file\", this.file);\n//     axios.post(\"/api/uppladdning\", formData).then((respons) => {\n//       if (respons.data[\"uploadSuccess\"]) {\n//         this.props.history.push(\"/success\");\n//         if (radio.paused) radio.play();\n//       }\n//     });\n//     return false;\n//   };\n\n//   constructor(props) {\n//     super(props);\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <form onSubmit={this.onUserSubmit}>\n//           <input\n//             type=\"file\"\n//             onChange={this.onFileChange}\n//             accept=\".xls, .xlsx, .csv\"\n//           />\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Route path=\"/:page\" component={Player}></Route>\n        <Route exact path=\"/\" component={Player}></Route>\n        <Route exact path=\"/\" component={About}></Route>\n        <Route exact path=\"/om\" component={About}></Route>\n        {/* <Route exact path=\"/uppladdning\" component={Uppladdning}></Route> */}\n        <Route exact path=\"/uppladdning\" component={Upload}></Route>\n        {/*<Route exact path=\"/kontakt\" component={Contact}></Route>*/}\n        {/*<Route exact path=\"/success\" component={Success}></Route>*/}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ThemeProvider, studioTheme, ToastProvider } from \"@sanity/ui\";\n\nimport { PlayProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={studioTheme} scheme=\"light\">\n      <ToastProvider>\n        <PlayProvider>\n          <App />\n        </PlayProvider>\n      </ToastProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}